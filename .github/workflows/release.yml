name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: '--target aarch64-apple-darwin'
          - platform: macos-latest
            args: '--target x86_64-apple-darwin'
          - platform: ubuntu-22.04
            args: ''
          - platform: windows-latest
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: './ui/package-lock.json'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # Linux dependencies
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libunwind-dev \
            pkg-config \
            cmake \
            build-essential \
            libglib2.0-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad \
            gstreamer1.0-plugins-ugly
          
          # Verify GStreamer installation
          gst-launch-1.0 --version || true
          pkg-config --modversion gstreamer-1.0 || true

      # macOS dependencies
      - name: Install macOS dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          brew install pkg-config glib gstreamer gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly
          
          # Get Homebrew prefix
          BREW_PREFIX=$(brew --prefix)
          GST_PREFIX="$BREW_PREFIX/opt/gstreamer"
          
          # Set environment variables
          echo "PKG_CONFIG_PATH=$BREW_PREFIX/opt/gstreamer/lib/pkgconfig:$BREW_PREFIX/opt/gst-plugins-base/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "LIBRARY_PATH=$BREW_PREFIX/lib:$LIBRARY_PATH" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$BREW_PREFIX/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "GST_PLUGIN_PATH=$BREW_PREFIX/lib/gstreamer-1.0" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          
          # Verify installation
          gst-launch-1.0 --version || true
          pkg-config --modversion gstreamer-1.0 || true

      # Windows dependencies
      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          # Install pkg-config and MinGW
          choco install -y pkgconfiglite mingw
          
          # Create temp directory for downloads
          $tempDir = "C:\gst-temp"
          New-Item -ItemType Directory -Force -Path $tempDir
          
          # Download GStreamer MSIs
          $gstVer = "1.22.8"
          $gstUrl = "https://gstreamer.freedesktop.org/data/pkg/windows/$gstVer/msvc"
          
          Invoke-WebRequest -Uri "$gstUrl/gstreamer-1.0-msvc-x86_64-$gstVer.msi" -OutFile "$tempDir\gstreamer.msi"
          Invoke-WebRequest -Uri "$gstUrl/gstreamer-1.0-devel-msvc-x86_64-$gstVer.msi" -OutFile "$tempDir\gstreamer-devel.msi"
          
          # Install MSIs silently
          Start-Process -Wait msiexec -ArgumentList "/i $tempDir\gstreamer.msi /quiet"
          Start-Process -Wait msiexec -ArgumentList "/i $tempDir\gstreamer-devel.msi /quiet"
          
          # Set environment variables
          $gstRoot = "C:\gstreamer\1.0\msvc_x86_64"
          echo "GSTREAMER_1_0_ROOT_MSVC_X86_64=$gstRoot" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PKG_CONFIG_PATH=$gstRoot\lib\pkgconfig" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$gstRoot\bin;$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
          
          # Verify installation
          & "$gstRoot\bin\gst-launch-1.0.exe" --version
          pkg-config --modversion gstreamer-1.0

      - name: Install frontend dependencies
        run: |
          cd ui
          npm install

      - name: Setup workspace
        shell: bash
        run: |
          echo "Checking workspace structure..."
          ls -la
          echo "Checking Cargo.toml contents:"
          cat Cargo.toml || true
          echo "Checking engine directory:"
          ls -la engine || true
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
          
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PKG_CONFIG_ALLOW_CROSS: 1
        with:
          projectPath: './ui'
          tagName: ${{ github.ref_name }}
          releaseName: 'Scramblery ${{ github.ref_name }}'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}