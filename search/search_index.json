{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"# Scramblery A simple tool to scramble your images or only faces from images or videos. You can find the online demo in javascript here . For more information, please visit the documentation . Purpose of Package The purpose of this package is the creating scrambled images from images or videos. User can either scramble the whole image or only facial area. This is very useful tool in psychology experiments especially if you are working with faces. With a for loop you can scramble all the images in a folder and create a new folder with scrambled images. It was very long process to scramble images manually in the past and I feel like this package can be useful for many people. Hope this package will be useful for your research. Motivation Image scrambling is important in psychology experiments because it allows researchers to control the content and structure of visual stimuli, while removing or altering specific features or patterns that might influence participants' perception or response. By scrambling an image, researchers can create a version of the image that preserves the overall luminance, contrast, and spatial layout, but that removes or distorts specific features or patterns that might be relevant for the experiment. For example, researchers might scramble an image of a face to remove the facial features, while preserving the overall brightness and contrast, or they might scramble an image of a scene to remove the objects, while preserving the spatial layout and color. It allows researchers to control for potential confounds and biases that might arise from the content of the stimuli. By removing or distorting specific features or patterns, researchers can create stimuli that are less predictable and less likely to elicit specific responses from participants. This can help researchers to isolate the effects of the manipulated variables, and to reduce the influence of confounding factors that might interfere with the interpretation of the results. Features Scramble whole image with desired degree of scrambling (pixel values or pixel coordinates) Scramble only facial area with desired degree of scrambling (pixel values or pixel coordinates) Scramble only facial area in a video (useful for dynmaic stimuli) with desired degree of scrambling Installation The package can be found in pypi. To install the package, run the following command in the terminal: pip install scramblery Author Main Maintainer: [Enes ALTUN] Usage After installing the package, you can import the package as follows: - from scramblery import scramblery Then use the functions as follows to scramble images. I added some examples below. Javascript Demo Update: Also, with the same paradigm, I have created an animated version of scramblery just for fun. It's shuffling pixel values and coordinates in a given ratio then it's arranging them back in the original order. You can find the online demo in javascript here . example (gif animation): Contributon Any kind of contribution is welcome.","title":"Home"},{"location":"#purpose-of-package","text":"The purpose of this package is the creating scrambled images from images or videos. User can either scramble the whole image or only facial area. This is very useful tool in psychology experiments especially if you are working with faces. With a for loop you can scramble all the images in a folder and create a new folder with scrambled images. It was very long process to scramble images manually in the past and I feel like this package can be useful for many people. Hope this package will be useful for your research.","title":"Purpose of Package"},{"location":"#motivation","text":"Image scrambling is important in psychology experiments because it allows researchers to control the content and structure of visual stimuli, while removing or altering specific features or patterns that might influence participants' perception or response. By scrambling an image, researchers can create a version of the image that preserves the overall luminance, contrast, and spatial layout, but that removes or distorts specific features or patterns that might be relevant for the experiment. For example, researchers might scramble an image of a face to remove the facial features, while preserving the overall brightness and contrast, or they might scramble an image of a scene to remove the objects, while preserving the spatial layout and color. It allows researchers to control for potential confounds and biases that might arise from the content of the stimuli. By removing or distorting specific features or patterns, researchers can create stimuli that are less predictable and less likely to elicit specific responses from participants. This can help researchers to isolate the effects of the manipulated variables, and to reduce the influence of confounding factors that might interfere with the interpretation of the results.","title":"Motivation"},{"location":"#features","text":"Scramble whole image with desired degree of scrambling (pixel values or pixel coordinates) Scramble only facial area with desired degree of scrambling (pixel values or pixel coordinates) Scramble only facial area in a video (useful for dynmaic stimuli) with desired degree of scrambling","title":"Features"},{"location":"#installation","text":"The package can be found in pypi. To install the package, run the following command in the terminal: pip install scramblery","title":"Installation"},{"location":"#author","text":"Main Maintainer: [Enes ALTUN]","title":"Author"},{"location":"#usage","text":"After installing the package, you can import the package as follows: - from scramblery import scramblery Then use the functions as follows to scramble images. I added some examples below.","title":"Usage"},{"location":"#javascript-demo","text":"Update: Also, with the same paradigm, I have created an animated version of scramblery just for fun. It's shuffling pixel values and coordinates in a given ratio then it's arranging them back in the original order. You can find the online demo in javascript here . example (gif animation):","title":"Javascript Demo"},{"location":"#contributon","text":"Any kind of contribution is welcome.","title":"Contributon"},{"location":"api_reference/","text":"API reference This page gives an overview of the functions + get_facial_landmarks + scrambleface + scrambleimage + scramblevideo get_facial_landmarks the get_facial_landmarks function takes an image and returns the facial landmarks of the face in the image. scrambleface the scrambleface function takes an image and returns a scramble the facial area of the image. You can either scramble with the pixel values or with the pixel coordinate scrambleimage the scrambleimage function takes an image and returns a scrambled version of the image. This function is for the whole image. types:\"pixel\",\"square\",\"withinblocks\",\"rotate\",\"colormap\",\"gradient\" note: gradient is a implement a scramble type that randomly applies a gradient to blocks of the image. This could be achieved using the cv2.Sobel or cv2.Laplacian functions. colormap, will randomly apply one of the available color maps (Autumn, Bone, Jet, Winter, Rainbow, or Ocean) to each block of the image when the function is called with the \"colormap\" scramble type. This two parameters don't shuffle the blocks. \"\"\"scramble_image: Scramble the whole image. Args: image: input image(with extension) x_block: number of splits in x-axis y_block: number of splits in y-axis type: type of split: \"pixel\",\"classic\",\"withinblocks\" seed: seed for random number generator Usage: scrambleimage(\"image.png\",10,10,\"pixel\") \"\"\" scramblevideo the scramblevideo function takes a video and returns a scrambled version of the video.","title":"API"},{"location":"api_reference/#api-reference","text":"This page gives an overview of the functions + get_facial_landmarks + scrambleface + scrambleimage + scramblevideo get_facial_landmarks the get_facial_landmarks function takes an image and returns the facial landmarks of the face in the image. scrambleface the scrambleface function takes an image and returns a scramble the facial area of the image. You can either scramble with the pixel values or with the pixel coordinate scrambleimage the scrambleimage function takes an image and returns a scrambled version of the image. This function is for the whole image. types:\"pixel\",\"square\",\"withinblocks\",\"rotate\",\"colormap\",\"gradient\" note: gradient is a implement a scramble type that randomly applies a gradient to blocks of the image. This could be achieved using the cv2.Sobel or cv2.Laplacian functions. colormap, will randomly apply one of the available color maps (Autumn, Bone, Jet, Winter, Rainbow, or Ocean) to each block of the image when the function is called with the \"colormap\" scramble type. This two parameters don't shuffle the blocks. \"\"\"scramble_image: Scramble the whole image. Args: image: input image(with extension) x_block: number of splits in x-axis y_block: number of splits in y-axis type: type of split: \"pixel\",\"classic\",\"withinblocks\" seed: seed for random number generator Usage: scrambleimage(\"image.png\",10,10,\"pixel\") \"\"\" scramblevideo the scramblevideo function takes a video and returns a scrambled version of the video.","title":"API reference"},{"location":"userguide/","text":"Installation The package can be found in pypi. To install the package, run the following command in the terminal: pip install scramblery Usage import the package: from scramblery import scramblery The package has 3 functions to use. Use the functions in the following manner: scramblery.scrambleimage(\"Lena.png\",8,8) scramblery.scrambleface(\"Lena.png\",8) scramblery.scramblevideo(\"Lena.png\",8,8) Sometimes there may be some errors related to the size of the image when splitting into squares. Therefore, you may need to edit the number you will reserve. I will fix this issue in future releases.","title":"User Guide"},{"location":"userguide/#installation","text":"The package can be found in pypi. To install the package, run the following command in the terminal: pip install scramblery","title":"Installation"},{"location":"userguide/#usage","text":"import the package: from scramblery import scramblery The package has 3 functions to use. Use the functions in the following manner: scramblery.scrambleimage(\"Lena.png\",8,8) scramblery.scrambleface(\"Lena.png\",8) scramblery.scramblevideo(\"Lena.png\",8,8) Sometimes there may be some errors related to the size of the image when splitting into squares. Therefore, you may need to edit the number you will reserve. I will fix this issue in future releases.","title":"Usage"}]}